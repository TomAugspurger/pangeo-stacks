name: build

on:
  push:
    branches:
      - master
    # Github tags (1.2.3) get corresponding dockerhub tag (DOCKER_IMAGE:1.2.3)
    tags:
      - '*'
    # paths:
    #   - binder/*
    #   - requirements.txt
  pull_request:
    branches:
      - master
    # paths:
    #   - binder/*
    #   - requirements.txt


env:
  CONTAINER_NAME: ${{ github.repository }} # user/repo format
  GITHUB_SHA: ${{ github.sha }}
  GITHUB_REF: ${{ github.ref }}
  IMAGE_PREFIX: pangeo/


jobs:
  base-notebook:
    runs-on: ubuntu-18.04
    steps:
    - name: Checkout Repo
      uses: actions/checkout@v1
    - name: Set Up Python 3.7
      uses: actions/setup-python@v1
      with:
        python-version: 3.7
    - name: Enable Pip Cache
      # https://github.com/actions/cache/blob/master/examples.md#python---pip
      uses: actions/cache@v1
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    - name: Install Dependencies
      run: |
        python --version
        pip install -r requirements.txt
        repo2docker --version
        docker version
    # - name: Authenticate with DockerHub
    #   # Consider GitHub Packages once they allow for unathenticated pulling
    #   # https://github.com/actions/starter-workflows/blob/master/ci/docker-push.yml
    #   # echo "${{ secrets.GITHUB_TOKEN }}" | docker login docker.pkg.github.com -u ${{ github.actor }} --password-stdin
    #   run: |
    #     echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
    - name: Build Image
      # Add folder of artifacts related to build that anyone can download
      run: |
        # pwd
        # ls ${PWD}/*
        python3 build.py --image-prefix=${IMAGE_PREFIX} base-notebook
  pangeo-notebook:
    needs: base-notebook
    runs-on: ubuntu-18.04
    steps:
    - name: Checkout Repo
      uses: actions/checkout@v1
    - name: Set Up Python 3.7
      uses: actions/setup-python@v1
      with:
        python-version: 3.7
    - name: Enable Pip Cache
      # https://github.com/actions/cache/blob/master/examples.md#python---pip
      uses: actions/cache@v1
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    - name: Install Dependencies
      run: |
        python --version
        pip install -r requirements.txt
        repo2docker --version
        docker version
    # - name: Authenticate with DockerHub
    #   # Consider GitHub Packages once they allow for unathenticated pulling
    #   # https://github.com/actions/starter-workflows/blob/master/ci/docker-push.yml
    #   # echo "${{ secrets.GITHUB_TOKEN }}" | docker login docker.pkg.github.com -u ${{ github.actor }} --password-stdin
    #   run: |
    #     echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
    - name: Build Image
      # Add folder of artifacts related to build that anyone can download
      run: |
        # pwd
        # ls ${PWD}/*
        python3 build.py --image-prefix=${IMAGE_PREFIX} pangeo-notebook
  pangeo-esip:
    runs-on: ubuntu-18.04
    steps:
    - name: Checkout Repo
      uses: actions/checkout@v1
    - name: Set Up Python 3.7
      uses: actions/setup-python@v1
      with:
        python-version: 3.7
    - name: Enable Pip Cache
      # https://github.com/actions/cache/blob/master/examples.md#python---pip
      uses: actions/cache@v1
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    - name: Install Dependencies
      run: |
        python --version
        pip install -r requirements.txt
        repo2docker --version
        docker version
    # - name: Authenticate with DockerHub
    #   # Consider GitHub Packages once they allow for unathenticated pulling
    #   # https://github.com/actions/starter-workflows/blob/master/ci/docker-push.yml
    #   # echo "${{ secrets.GITHUB_TOKEN }}" | docker login docker.pkg.github.com -u ${{ github.actor }} --password-stdin
    #   run: |
    #     echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
    - name: Build Image
      # Add folder of artifacts related to build that anyone can download
      run: |
        # pwd
        # ls ${PWD}/*
        python3 build.py --image-prefix=${IMAGE_PREFIX} pangeo-esip
